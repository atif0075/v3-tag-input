/**
 * Customize default theme styling by overriding CSS variables:
 * https://github.com/vuejs/vitepress/blob/main/src/client/theme-default/styles/vars.css
 */

/**
 * Colors
 *
 * Each colors have exact same color scale system with 3 levels of solid
 * colors with different brightness, and 1 soft color.
 * 
 * - `XXX-1`: The most solid color used mainly for colored text. It must
 *   satisfy the contrast ratio against when used on top of `XXX-soft`.
 *
 * - `XXX-2`: The color used mainly for hover state of the button.
 *
 * - `XXX-3`: The color for solid background, such as bg color of the button.
 *   It must satisfy the contrast ratio with pure white (#ffffff) text on
 *   top of it.
 *
 * - `XXX-soft`: The color used for subtle background such as custom container
 *   or badges. It must satisfy the contrast ratio when putting `XXX-1` colors
 *   on top of it.
 *
 *   The soft color must be semi transparent alpha channel. This is crucial
 *   because it allows adding multiple "soft" colors on top of each other
 *   to create a accent, such as when having inline code block inside
 *   custom containers.
 *
 * - `default`: The color used purely for subtle indication without any
 *   special meanings attched to it such as bg color for menu hover state.
 *
 * - `brand`: Used for primary brand colors, such as link text, button with
 *   brand theme, etc.
 *
 * - `tip`: Used to indicate useful information. The default theme uses the
 *   brand color for this by default.
 *
 * - `warning`: Used to indicate warning to the users. Used in custom
 *   container, badges, etc.
 *
 * - `danger`: Used to show error, or dangerous message to the users. Used
 *   in custom container, badges, etc.
 * -------------------------------------------------------------------------- */

:root {
  --vp-c-default-1: var(--vp-c-gray-1);
  --vp-c-default-2: var(--vp-c-gray-2);
  --vp-c-default-3: var(--vp-c-gray-3);
  --vp-c-default-soft: var(--vp-c-gray-soft);

  --vp-c-brand-1: var(--vp-c-indigo-1);
  --vp-c-brand-2: var(--vp-c-indigo-2);
  --vp-c-brand-3: var(--vp-c-indigo-3);
  --vp-c-brand-soft: var(--vp-c-indigo-soft);

  --vp-c-tip-1: var(--vp-c-brand-1);
  --vp-c-tip-2: var(--vp-c-brand-2);
  --vp-c-tip-3: var(--vp-c-brand-3);
  --vp-c-tip-soft: var(--vp-c-brand-soft);

  --vp-c-warning-1: var(--vp-c-yellow-1);
  --vp-c-warning-2: var(--vp-c-yellow-2);
  --vp-c-warning-3: var(--vp-c-yellow-3);
  --vp-c-warning-soft: var(--vp-c-yellow-soft);

  --vp-c-danger-1: var(--vp-c-red-1);
  --vp-c-danger-2: var(--vp-c-red-2);
  --vp-c-danger-3: var(--vp-c-red-3);
  --vp-c-danger-soft: var(--vp-c-red-soft);
}

/**
 * Component: Button
 * -------------------------------------------------------------------------- */

:root {
  --vp-button-brand-border: transparent;
  --vp-button-brand-text: var(--vp-c-white);
  --vp-button-brand-bg: var(--vp-c-brand-3);
  --vp-button-brand-hover-border: transparent;
  --vp-button-brand-hover-text: var(--vp-c-white);
  --vp-button-brand-hover-bg: var(--vp-c-brand-2);
  --vp-button-brand-active-border: transparent;
  --vp-button-brand-active-text: var(--vp-c-white);
  --vp-button-brand-active-bg: var(--vp-c-brand-1);
}

/**
 * Component: Home
 * -------------------------------------------------------------------------- */

/* background: linear-gradient(45deg, #c11ceb, #6f19b5, #25007a) */
/* background: linear-gradient(45deg, #240217, #570738, #941061, #eb2da2, #ff7dcd) */

:root {
  --vp-home-hero-name-color: transparent;
  --vp-home-hero-name-background: -webkit-linear-gradient(
    120deg,
    #bd34fe 30%,
    #41d1ff
  );
  /* linear-gradient(45deg, #f7854b, #f2ca37); */

  --vp-home-hero-image-background-image: linear-gradient(
    -45deg,
    #bd34fe 50%,
    #47caff 50%
  );
  --vp-home-hero-image-filter: blur(40px);
}

@media (min-width: 640px) {
  :root {
    --vp-home-hero-image-filter: blur(56px);
  }
}

@media (min-width: 960px) {
  :root {
    --vp-home-hero-image-filter: blur(72px);
  }
}

/**
 * Component: Custom Block
 * -------------------------------------------------------------------------- */

:root {
  --vp-custom-block-tip-border: transparent;
  --vp-custom-block-tip-text: var(--vp-c-text-1);
  --vp-custom-block-tip-bg: var(--vp-c-brand-soft);
  --vp-custom-block-tip-code-bg: var(--vp-c-brand-soft);
}

/**
 * Component: Algolia
 * -------------------------------------------------------------------------- */

.DocSearch {
  --docsearch-primary-color: var(--vp-c-brand-1) !important;
}
.main {
  order: 0 !important;
  width: auto !important;
  flex-grow: 0 !important;
  flex-shrink: 0 !important;
}

.container {
  display: flex;
  justify-content: center;
  align-items: center;
}
.name {
  text-align: center;
}
.text {
  text-align: center;
  font-size: 2rem !important;
  font-weight: 500;
}
.tagline {
  text-align: center;
  font-size: 1.5rem !important;
  font-weight: 500;
}
#tagInpWrapper {
  padding: 1rem 1rem;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.dark .tagInputContainer {
  background-color: #272a2f;
  border: 1px solid #4b5563;
}
.dark .tags {
  color: #d1d5db;
  background-color: #1b1b1f;
}
.switches {
  display: flex;
  justify-content: start;
  align-items: center;
  margin-bottom: 1rem;
}
#mainTagInpWrapper {
  width: 100%;
  max-width: 760px;
}
/* Styles for the label container */
.label-container {
  display: inline-flex;
  align-items: center;
  cursor: pointer;
  position: relative;
}

/* Styles for the hidden checkbox input */
.label-container input[type="checkbox"] {
  visibility: hidden;
  position: absolute;
}

/* Styles for the checkbox */
.checkbox {
  width: 2.75rem;
  height: 1.5rem;
  background-color: #e5e7eb;
  border-radius: 9999px;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: flex-start;
  cursor: pointer;
}

/* Styles for the checked checkbox */
.label-container input[type="checkbox"]:checked + .checkbox {
  background-color: #2563eb;
}

/* Styles for the checkmark */
.checkmark {
  content: "";
  width: 1.25rem;
  height: 1.25rem;
  background-color: #fff;
  border: 1px solid #d1d5db;
  border-radius: 9999px;
  position: absolute;
  top: 2px;
  left: 2px;
  transition: all 0.3s ease;
}

/* Styles for the checked checkmark */
.label-container input[type="checkbox"]:checked + .checkbox .checkmark {
  transform: translateX(100%);
  border-color: #fff;
}

/* Styles for the text label */
.label-text {
  margin-left: 0.75rem;
  font-size: 0.875rem;
  font-weight: 500;
  color: #111827;
}

.dark .checkbox {
  background-color: #4b5563;
}

.dark .label-container input[type="checkbox"]:checked + .checkbox {
  background-color: #2563eb;
}

.dark .label-container input[type="checkbox"]:checked + .checkbox .checkmark {
  border-color: #4b5563;
}

.dark .label-text {
  color: #d1d5db;
}
